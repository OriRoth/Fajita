/* BEGIN  ----- following code was automatically generated by Fling(c) on Sun Jun 21 02:20:26 IDT 2020 */

/* Forward declaration of 11 types: */
struct BOTTOM;
struct TOP;
template <typename q0, typename q1> struct q1_EB;
template <typename q0, typename q1> struct q1_BB;
template <typename q0, typename q1> struct q0_B;
template <typename q0, typename q1> struct q1_B;
template <typename q0, typename q1> struct q0_E;
template <typename q0, typename q1> struct q1_EA;
template <typename q0, typename q1> struct q1_AA;
template <typename q0, typename q1> struct q1_A;
template <typename q0, typename q1> struct q0_A;

/* Forward declarion of 3 start methods: */
TOP $();
q1_EB<TOP, BOTTOM> b();
q1_EA<TOP, BOTTOM> a();

/* Full definition of 11 types: */
struct BOTTOM {
}
struct TOP {
}
template <typename q0, typename q1> struct q1_EB {
  q1_BB<q0_E<q0, q1>, q0_E<q0, q1>> b() {
    return q1_BB<q0_E<q0, q1>, q0_E<q0, q1>>();
  };
  q0_E<q0, q1> a() {
    return q0_E<q0, q1>();
  };
}
template <typename q0, typename q1> struct q1_BB {
  q1_BB<q0_B<q0, q1>, q1_B<q0, q1>> b() {
    return q1_BB<q0_B<q0, q1>, q1_B<q0, q1>>();
  };
  q1_B<q0, q1> a() {
    return q1_B<q0, q1>();
  };
}
template <typename q0, typename q1> struct q0_B {
  BOTTOM b() {
    return BOTTOM();
  };
  BOTTOM a() {
    return BOTTOM();
  };
  TOP $() {
    return TOP();
  };
}
template <typename q0, typename q1> struct q1_B {
  q1_BB<q0, q1> b() {
    return q1_BB<q0, q1>();
  };
  q1 a() {
    return q1();
  };
}
template <typename q0, typename q1> struct q0_E {
  q1_EB<q0, q1> b() {
    return q1_EB<q0, q1>();
  };
  q1_EA<q0, q1> a() {
    return q1_EA<q0, q1>();
  };
  TOP $() {
    return TOP();
  };
}
template <typename q0, typename q1> struct q1_EA {
  q0_E<q0, q1> b() {
    return q0_E<q0, q1>();
  };
  q1_AA<q0_E<q0, q1>, q0_E<q0, q1>> a() {
    return q1_AA<q0_E<q0, q1>, q0_E<q0, q1>>();
  };
}
template <typename q0, typename q1> struct q1_AA {
  q1_A<q0, q1> b() {
    return q1_A<q0, q1>();
  };
  q1_AA<q0_A<q0, q1>, q1_A<q0, q1>> a() {
    return q1_AA<q0_A<q0, q1>, q1_A<q0, q1>>();
  };
}
template <typename q0, typename q1> struct q1_A {
  q1 b() {
    return q1();
  };
  q1_AA<q0, q1> a() {
    return q1_AA<q0, q1>();
  };
}
template <typename q0, typename q1> struct q0_A {
  BOTTOM b() {
    return BOTTOM();
  };
  BOTTOM a() {
    return BOTTOM();
  };
  TOP $() {
    return TOP();
  };
}

/* Full definition of 3 start methods: */
TOP $() {
  return TOP();
};
q1_EB<TOP, BOTTOM> b() {
  return q1_EB<TOP, BOTTOM>();
};
q1_EA<TOP, BOTTOM> a() {
  return q1_EA<TOP, BOTTOM>();
};

/* END ------------ above code was automatically generated by Fling(c) on Sun Jun 21 02:20:26 IDT 2020 */
