//package org.spartan.fajita.api.examples;
//
//import java.util.ArrayList;
//
//import org.spartan.fajita.api.ast.Atomic;
//import org.spartan.fajita.api.ast.Compound;
//import org.spartan.fajita.api.ast.InheritedNonterminal;
//
//public class AutoGeneratedHamcrest {
//
//	public static abstract class CompoundMatcher extends Compound
//			implements
//				IMatcher {
//		CompoundMatcher(final Matcher parent) {
//			super(parent);
//			parent.deriveTo(this);
//		}
//
//		@Override
//		public Matcher getParent() {
//			return (Matcher) super.getParent();
//		}
//	}
//
//	public interface IMatcher {
//	}
//
//	static class Matcher extends InheritedNonterminal implements IMatcher {
//		/**
//		 * for bottom-up
//		 */
//		Matcher() {
//			super(null);
//		}
//
//		/**
//		 * for top-down
//		 */
//		Matcher(final Compound parent) {
//			super(parent);
//		}
//
//		@Override
//		public String getName() {
//			return "MATCHER";
//		}
//	}
//
//	public static abstract class CompoundMatchers_opt extends Compound
//			implements
//				IMatchers_opt {
//		CompoundMatchers_opt(final Matchers_opt parent) {
//			super(parent);
//			parent.deriveTo(this);
//		}
//
//		@Override
//		public Matchers_opt getParent() {
//			return (Matchers_opt) super.getParent();
//		}
//	}
//
//	public interface IMatchers_opt {
//	}
//
//	static class Matchers_opt extends InheritedNonterminal
//			implements
//				IMatchers_opt {
//		/**
//		 * for bottom-up
//		 */
//		Matchers_opt() {
//			super(null);
//		}
//
//		/**
//		 * for top-down
//		 */
//		Matchers_opt(final Compound parent) {
//			super(parent);
//		}
//
//		@Override
//		public String getName() {
//			return "MATCHERS_OPT";
//		}
//	}
//
//	public static class AssertthatTerm extends Atomic {
//		AssertthatTerm(final Compound parent) {
//			super(parent);
//		}
//
//		@Override
//		public String getName() {
//			return "assertthat";
//		}
//	}
//
//	public static class Instance_ofTerm extends Atomic {
//		Instance_ofTerm(final Compound parent) {
//			super(parent);
//		}
//
//		@Override
//		public String getName() {
//			return "instance_of";
//		}
//	}
//
//	public static class AnythingTerm extends Atomic {
//		AnythingTerm(final Compound parent) {
//			super(parent);
//		}
//
//		@Override
//		public String getName() {
//			return "anything";
//		}
//	}
//
//	public static class NotTerm extends Atomic {
//		NotTerm(final Compound parent) {
//			super(parent);
//		}
//
//		@Override
//		public String getName() {
//			return "not";
//		}
//	}
//
//	public static class Equals_toTerm extends Atomic {
//		Equals_toTerm(final Compound parent) {
//			super(parent);
//		}
//
//		@Override
//		public String getName() {
//			return "equals_to";
//		}
//	}
//
//	public static class Any_ofTerm extends Atomic {
//		Any_ofTerm(final Compound parent) {
//			super(parent);
//		}
//
//		@Override
//		public String getName() {
//			return "any_of";
//		}
//	}
//
//	public static class ValueTerm extends Atomic {
//		ValueTerm(final Compound parent) {
//			super(parent);
//		}
//
//		@Override
//		public String getName() {
//			return "value";
//		}
//	}
//
//	public static class TypeTerm extends Atomic {
//		TypeTerm(final Compound parent) {
//			super(parent);
//		}
//
//		@Override
//		public String getName() {
//			return "type";
//		}
//	}
//
//	public static class EpsilonTerm extends Atomic {
//		EpsilonTerm(final Compound parent) {
//			super(parent);
//		}
//
//		@Override
//		public String getName() {
//			return "epsilon";
//		}
//	}
//
//	public static class Assert extends Compound {
//		final AssertthatTerm child0;
//		final ValueTerm child1;
//		final Matcher child2;
//
//		@Override
//		public String getName() {
//			return "ASSERT";
//		}
//
//		@Override
//		protected ArrayList<Compound> getChildren() {
//			ArrayList<Compound> $ = new ArrayList<>();
//			$.add(new AssertthatTerm(this));
//			$.add(new ValueTerm(this));
//			$.add(new Matcher(this));
//			return $;
//		}
//
//		/**
//		 * for top-down
//		 */
//		Assert(final Compound parent) {
//			super(parent);
//			child0 = (AssertthatTerm) getChild(0);
//			child1 = (ValueTerm) getChild(1);
//			child2 = (Matcher) getChild(2);
//		}
//	}
//
//	public static class Instance_of extends CompoundMatcher {
//		final Instance_ofTerm child0;
//		final TypeTerm child1;
//
//		@Override
//		public String getName() {
//			return "INSTANCE_OF";
//		}
//
//		/**
//		 * for bottom-up
//		 */
//		Instance_of() {
//			this(new Matcher());
//		}
//
//		@Override
//		protected ArrayList<Compound> getChildren() {
//			ArrayList<Compound> $ = new ArrayList<>();
//			$.add(new Instance_ofTerm(this));
//			$.add(new TypeTerm(this));
//			return $;
//		}
//
//		/**
//		 * for top-down
//		 */
//		Instance_of(final Matcher parent) {
//			super(parent);
//			child0 = (Instance_ofTerm) getChild(0);
//			child1 = (TypeTerm) getChild(1);
//		}
//	}
//
//	public static class Anything extends CompoundMatcher {
//		final AnythingTerm child0;
//
//		@Override
//		public String getName() {
//			return "ANYTHING";
//		}
//
//		/**
//		 * for bottom-up
//		 */
//		Anything() {
//			this(new Matcher());
//		}
//
//		@Override
//		protected ArrayList<Compound> getChildren() {
//			ArrayList<Compound> $ = new ArrayList<>();
//			$.add(new AnythingTerm(this));
//			return $;
//		}
//
//		/**
//		 * for top-down
//		 */
//		Anything(final Matcher parent) {
//			super(parent);
//			child0 = (AnythingTerm) getChild(0);
//		}
//	}
//
//	public static class Equal_to extends CompoundMatcher {
//		final Equals_toTerm child0;
//		final ValueTerm child1;
//
//		@Override
//		public String getName() {
//			return "EQUAL_TO";
//		}
//
//		/**
//		 * for bottom-up
//		 */
//		Equal_to() {
//			this(new Matcher());
//		}
//
//		@Override
//		protected ArrayList<Compound> getChildren() {
//			ArrayList<Compound> $ = new ArrayList<>();
//			$.add(new Equals_toTerm(this));
//			$.add(new ValueTerm(this));
//			return $;
//		}
//
//		/**
//		 * for top-down
//		 */
//		Equal_to(final Matcher parent) {
//			super(parent);
//			child0 = (Equals_toTerm) getChild(0);
//			child1 = (ValueTerm) getChild(1);
//		}
//	}
//
//	public static class Not extends CompoundMatcher {
//		final NotTerm child0;
//		final Matcher child1;
//
//		@Override
//		public String getName() {
//			return "NOT";
//		}
//
//		/**
//		 * for bottom-up
//		 */
//		Not() {
//			this(new Matcher());
//		}
//
//		@Override
//		protected ArrayList<Compound> getChildren() {
//			ArrayList<Compound> $ = new ArrayList<>();
//			$.add(new NotTerm(this));
//			$.add(new Matcher(this));
//			return $;
//		}
//
//		/**
//		 * for top-down
//		 */
//		Not(final Matcher parent) {
//			super(parent);
//			child0 = (NotTerm) getChild(0);
//			child1 = (Matcher) getChild(1);
//		}
//	}
//
//	public static class Any_of extends CompoundMatcher {
//		final Any_ofTerm child0;
//		final Matchers child1;
//
//		@Override
//		public String getName() {
//			return "ANY_OF";
//		}
//
//		/**
//		 * for bottom-up
//		 */
//		Any_of() {
//			this(new Matcher());
//		}
//
//		@Override
//		protected ArrayList<Compound> getChildren() {
//			ArrayList<Compound> $ = new ArrayList<>();
//			$.add(new Any_ofTerm(this));
//			$.add(new Matchers(this));
//			return $;
//		}
//
//		/**
//		 * for top-down
//		 */
//		Any_of(final Matcher parent) {
//			super(parent);
//			child0 = (Any_ofTerm) getChild(0);
//			child1 = (Matchers) getChild(1);
//		}
//	}
//
//	public static class Matchers extends CompoundMatchers_opt {
//		final Matcher child0;
//		final Matchers_opt child1;
//
//		@Override
//		public String getName() {
//			return "MATCHERS";
//		}
//
//		/**
//		 * for bottom-up
//		 */
//		Matchers() {
//			this(new Matchers_opt());
//		}
//
//		@Override
//		protected ArrayList<Compound> getChildren() {
//			ArrayList<Compound> $ = new ArrayList<>();
//			$.add(new Matcher(this));
//			$.add(new Matchers_opt(this));
//			return $;
//		}
//
//		/**
//		 * for top-down
//		 */
//		Matchers(final Matchers_opt parent) {
//			super(parent);
//			child0 = (Matcher) getChild(0);
//			child1 = (Matchers_opt) getChild(1);
//		}
//	}
//
//	public static class Epsilon extends CompoundMatchers_opt {
//		final EpsilonTerm child0;
//
//		@Override
//		public String getName() {
//			return "EPSILON";
//		}
//
//		/**
//		 * for bottom-up
//		 */
//		Epsilon() {
//			this(new Matchers_opt());
//		}
//
//		@Override
//		protected ArrayList<Compound> getChildren() {
//			ArrayList<Compound> $ = new ArrayList<>();
//			$.add(new EpsilonTerm(this));
//			return $;
//		}
//
//		/**
//		 * for top-down
//		 */
//		Epsilon(final Matchers_opt parent) {
//			super(parent);
//			child0 = (EpsilonTerm) getChild(0);
//		}
//	}
//}
