package org.spartan.fajita.api.examples.automatonCycles.states;

import org.spartan.fajita.api.parser.stack.EmptyStack;
import org.spartan.fajita.api.parser.stack.IStack;

public class AutoGeneratedStates {
  @SuppressWarnings({
      "rawtypes" }) public abstract static class BaseState<Stack extends IStack<?>, a extends BaseState, b extends BaseState, d extends BaseState, A extends BaseState, B extends BaseState, C extends BaseState, D extends BaseState>
          implements IStack<Stack> {
    protected final Stack stack;

    BaseState(final Stack stack) {
      this.stack = stack;
    }
    protected d d() {
      throw new ParseError("unexpected symbol on state " + getClass().getSimpleName());
    }
    protected a a() {
      throw new ParseError("unexpected symbol on state " + getClass().getSimpleName());
    }
    protected b b() {
      throw new ParseError("unexpected symbol on state " + getClass().getSimpleName());
    }
    protected B B() {
      throw new ParseError("unexpected symbol on state " + getClass().getSimpleName());
    }
    protected A A() {
      throw new ParseError("unexpected symbol on state " + getClass().getSimpleName());
    }
    protected D D() {
      throw new ParseError("unexpected symbol on state " + getClass().getSimpleName());
    }
    protected C C() {
      throw new ParseError("unexpected symbol on state " + getClass().getSimpleName());
    }
  }

  @SuppressWarnings({ "serial" }) public static class ParseError extends java.lang.RuntimeException {
    ParseError(final java.lang.String msg) {
      super(msg);
    }
  }

  // < 0 1 2 3 4 5 6 7 >
  // BaseState<Stack , d , a , b , B , A , D , C >
  public static class ErrorState
      extends BaseState<EmptyStack, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState> {
    ErrorState() {
      super(new EmptyStack());
    }
  }

  public static class Q0 extends
      BaseState<EmptyStack, Q2<Q0, Q6<Q4<Q0, ?>, Q7<Q3<Q0>>>>, ErrorState, ErrorState, Q4<Q0, Q7<Q3<Q0>>>, ErrorState, Q3<Q0>, Q1<Q0>> {
    Q0() {
      super(new EmptyStack());
    }
    
    @Override public Q2<Q0, Q6<Q4<Q0, ?>, Q7<Q3<Q0>>>> a() {
      return super.a();
    }
    
    @Override protected Q3<Q0> C() {
      return super.C();
    }
    
    @Override protected Q4<Q0, Q7<Q3<Q0>>> A() {
      return super.A();
    }
    
    @Override protected Q1<Q0> D() {
      return super.D();
    }
  }

  public static class Q1<Stack extends BaseState<?, ?, ?, ?, ?, ?, ?, ?>>
      extends BaseState<Stack, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState> {
    Q1(Stack stack) {
      super(stack);
    }
  }

  public static class Q2<Stack extends BaseState<?, ?, ?, ?, ?, ?, ?, ?>, A_1_b extends BaseState<?, ?, ?, ?, ?, ?, ?, ?>> extends
      BaseState<Stack, Q2<Q2<Stack, ?>, A_1_b>, A_1_b, ErrorState, Q8<Q2<Stack, ?>, A_1_b>, ErrorState, ErrorState, ErrorState> {
    Q2(Stack stack) {
      super(stack);
    }
    
    @Override public Q2<Q2<Stack, ?>, A_1_b> a() {
      return super.a();
    }
  }

  public static class Q3<Stack extends BaseState<?, ?, ?, ?, ?, ?, ?, ?>>
      extends BaseState<Stack, ErrorState, ErrorState, Q7<Q3<Stack>>, ErrorState, ErrorState, ErrorState, ErrorState> {
    Q3(Stack stack) {
      super(stack);
    }
    
    @Override public Q7<Q3<Stack>> d() {
      return super.d();
    }
  }

  public static class Q4<Stack extends BaseState<?, ?, ?, ?, ?, ?, ?, ?>, C_1_d extends BaseState<?, ?, ?, ?, ?, ?, ?, ?>> extends
      BaseState<Stack, ErrorState, Q6<Q4<Stack, ?>, C_1_d>, ErrorState, ErrorState, Q5<Q4<Stack, ?>, C_1_d>, ErrorState, ErrorState> {
    Q4(Stack stack) {
      super(stack);
    }
    
    @Override protected Q5<Q4<Stack, ?>, C_1_d> B() {
      // TODO Auto-generated method stub
      return super.B();
    }
  }

  public static class Q5<Stack extends BaseState<? extends BaseState<?, ?, ?, ?, ?, ?, ?, ?>, ?, ?, ?, ?, ?, ?, ?>, C_2_d extends BaseState<?, ?, ?, ?, ?, ?, ?, ?>>
      extends BaseState<Stack, ErrorState, ErrorState, C_2_d, ErrorState, ErrorState, ErrorState, ErrorState> {
    Q5(Stack stack) {
      super(stack);
    }
  }

  public static class Q6<Stack extends BaseState<?, ?, ?, ?, ?, ?, ?, ?>, B_1_d extends BaseState<?, ?, ?, ?, ?, ?, ?, ?>>
      extends BaseState<Stack, ErrorState, ErrorState, B_1_d, ErrorState, ErrorState, ErrorState, ErrorState> {
    Q6(Stack stack) {
      super(stack);
    }
  }

  public static class Q7<Stack extends BaseState<? extends BaseState<?, ?, ?, ?, ?, ?, ?, ?>, ?, ?, ?, ?, ?, ?, ?>>
      extends BaseState<Stack, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState> {
    Q7(Stack stack) {
      super(stack);
    }
  }

  public static class Q8<Stack extends BaseState<? extends BaseState<?, ?, ?, ?, ?, ?, ?, ?>, ?, ?, ?, ?, ?, ?, ?>, A_2_b extends BaseState<?, ?, ?, ?, ?, ?, ?, ?>>
      extends BaseState<Stack, ErrorState, A_2_b, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState> {
    Q8(Stack stack) {
      super(stack);
    }
  }
}
