package org.spartan.fajita.api.examples.balancedParenthesis.states;

import java.lang.Object;
import java.lang.Override;
import java.lang.RuntimeException;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.ArrayList;
import java.util.List;
import org.spartan.fajita.api.Main;
import org.spartan.fajita.api.bnf.rules.DerivationRule;
import org.spartan.fajita.api.examples.ASTViewer;

public class AutoGeneratedBalancedParenthesisStates {
  @SuppressWarnings({"all"})
  interface IStack<Tail extends IStack> {
  }

  @SuppressWarnings({"all"})
  public static class EmptyStack implements IStack<EmptyStack> {
  }

  public static class ErrorState extends BaseState<EmptyStack, ErrorState, ErrorState, ErrorState> {
    ErrorState() {
      super(new EmptyStack(),null);
    }
  }

  @SuppressWarnings({"serial"})
  public static class ParseError extends RuntimeException {
    ParseError(final String msg) {
      super(msg);
    }
  }

  @SuppressWarnings({"rawtypes"})
  public abstract static class BaseState<Stack extends IStack<?>, lp108241 extends BaseState, rp114007 extends BaseState, BALANCED extends BaseState> implements IStack<Stack> {
    private final Stack stack;

    protected final List<DerivationRule> reduces;

    BaseState(final Stack stack, final List<DerivationRule> reduces) {
      this.stack = stack;
      this.reduces = reduces;
    }

    protected Stack pop() {
      return stack;
    }

    protected lp108241 lp() {
      throw new ParseError("unexpected symbol on state " + getClass().getSimpleName());
    }

    protected rp114007 rp() {
      throw new ParseError("unexpected symbol on state " + getClass().getSimpleName());
    }

    protected BALANCED BALANCED() {
      throw new ParseError("unexpected symbol on state " + getClass().getSimpleName());
    }

    protected Object $() {
      throw new ParseError("unexpected symbol on state " + getClass().getSimpleName());
    }
  }

  public static class Q0 extends BaseState<EmptyStack, Q1<Q0>, ErrorState, Q2<Q0>> {
    public Q0() {
      super(new EmptyStack(),new ArrayList<>());
    }

    @Override
    public Q1<Q0> lp() {
      return new Q1<>(this,reduces);
    }

    @Override
    protected Q2<Q0> BALANCED() {
      return new Q2<>(this,reduces);
    }
  }

  public static class Q1<Stack extends BaseState<?, ?, ?, ?>> extends BaseState<Stack, Q3<Q1<Stack>, Q7<Q4<Q1<Stack>>>>, Q5<Q1<Stack>>, Q4<Q1<Stack>>> {
    Q1(Stack stack, List<DerivationRule> reduces) {
      super(stack,reduces);
    }

    @Override
    public Q3<Q1<Stack>, Q7<Q4<Q1<Stack>>>> lp() {
      return new Q3<>(this,reduces);
    }

    @Override
    public Q5<Q1<Stack>> rp() {
      return new Q5<>(this,reduces);
    }

    @Override
    protected Q4<Q1<Stack>> BALANCED() {
      return new Q4<>(this,reduces);
    }
  }

  public static class Q2<Stack extends BaseState<?, ?, ?, ?>> extends BaseState<Stack, ErrorState, ErrorState, ErrorState> {
    Q2(Stack stack, List<DerivationRule> reduces) {
      super(stack,reduces);
    }

    @Override
    public Object $() {
      ASTViewer.showASTs(Main.generateAST(reduces));
      System.out.println("finished");
      return new Object();
    }
  }

  public static class Q3<Stack extends BaseState<?, ?, ?, ?>, BALANCED_1_rp_114007 extends BaseState<?, ?, ?, ?>> extends BaseState<Stack, Q3<Q3<Stack, ?>, Q12<Q9<Q3<Stack, ?>, ?>, BALANCED_1_rp_114007>>, Q10<Q3<Stack, ?>, BALANCED_1_rp_114007>, Q9<Q3<Stack, ?>, BALANCED_1_rp_114007>> {
    Q3(Stack stack, List<DerivationRule> reduces) {
      super(stack,reduces);
    }

    @Override
    public Q3<Q3<Stack, ?>, Q12<Q9<Q3<Stack, ?>, ?>, BALANCED_1_rp_114007>> lp() {
      return new Q3<>(this,reduces);
    }

    @Override
    public Q10<Q3<Stack, ?>, BALANCED_1_rp_114007> rp() {
      return new Q10<>(this,reduces);
    }

    @Override
    protected Q9<Q3<Stack, ?>, BALANCED_1_rp_114007> BALANCED() {
      return new Q9<>(this,reduces);
    }
  }

  public static class Q4<Stack extends BaseState<? extends BaseState<?, ?, ?, ?>, ?, ?, ?>> extends BaseState<Stack, ErrorState, Q7<Q4<Stack>>, ErrorState> {
    Q4(Stack stack, List<DerivationRule> reduces) {
      super(stack,reduces);
    }

    @Override
    public Q7<Q4<Stack>> rp() {
      return new Q7<>(this,reduces);
    }
  }

  public static class Q5<Stack extends BaseState<? extends BaseState<?, ?, ?, ?>, ?, ?, ?>> extends BaseState<Stack, Q1<Q5<Stack>>, ErrorState, Q6<Q5<Stack>>> {
    private final String rule3 = "3,<BALANCED>,%lp%*-84:-19:0:5:115:114:0:19:106:97:118:97:46:117:116:105:108:46:65:114:114:97:121:76:105:115:116:120:-127:-46:29:-103:-57:97:-99:3:0:1:73:0:4:115:105:122:101:120:112:0:0:0:0:119:4:0:0:0:0:120*,%rp%*-84:-19:0:5:115:114:0:19:106:97:118:97:46:117:116:105:108:46:65:114:114:97:121:76:105:115:116:120:-127:-46:29:-103:-57:97:-99:3:0:1:73:0:4:115:105:122:101:120:112:0:0:0:0:119:4:0:0:0:0:120*";

    Q5(Stack stack, List<DerivationRule> reduces) {
      super(stack,reduces);
    }

    @Override
    public Q1<Q5<Stack>> lp() {
      return new Q1<>(this,reduces);
    }

    @Override
    protected Q6<Q5<Stack>> BALANCED() {
      return new Q6<>(this,reduces);
    }

    @Override
    public Object $() {
      reduces.add(DerivationRule.deserialize(rule3));
      return pop().pop().BALANCED().$();
    }
  }

  public static class Q6<Stack extends BaseState<? extends BaseState<? extends BaseState<?, ?, ?, ?>, ?, ?, ?>, ?, ?, ?>> extends BaseState<Stack, ErrorState, ErrorState, ErrorState> {
    private final String rule2 = "2,<BALANCED>,%lp%*-84:-19:0:5:115:114:0:19:106:97:118:97:46:117:116:105:108:46:65:114:114:97:121:76:105:115:116:120:-127:-46:29:-103:-57:97:-99:3:0:1:73:0:4:115:105:122:101:120:112:0:0:0:0:119:4:0:0:0:0:120*,%rp%*-84:-19:0:5:115:114:0:19:106:97:118:97:46:117:116:105:108:46:65:114:114:97:121:76:105:115:116:120:-127:-46:29:-103:-57:97:-99:3:0:1:73:0:4:115:105:122:101:120:112:0:0:0:0:119:4:0:0:0:0:120*,<BALANCED>";

    Q6(Stack stack, List<DerivationRule> reduces) {
      super(stack,reduces);
    }

    @Override
    public Object $() {
      reduces.add(DerivationRule.deserialize(rule2));
      return pop().pop().pop().BALANCED().$();
    }
  }

  public static class Q7<Stack extends BaseState<? extends BaseState<? extends BaseState<?, ?, ?, ?>, ?, ?, ?>, ?, ?, ?>> extends BaseState<Stack, Q1<Q7<Stack>>, ErrorState, Q8<Q7<Stack>>> {
    private final String rule0 = "0,<BALANCED>,%lp%*-84:-19:0:5:115:114:0:19:106:97:118:97:46:117:116:105:108:46:65:114:114:97:121:76:105:115:116:120:-127:-46:29:-103:-57:97:-99:3:0:1:73:0:4:115:105:122:101:120:112:0:0:0:0:119:4:0:0:0:0:120*,<BALANCED>,%rp%*-84:-19:0:5:115:114:0:19:106:97:118:97:46:117:116:105:108:46:65:114:114:97:121:76:105:115:116:120:-127:-46:29:-103:-57:97:-99:3:0:1:73:0:4:115:105:122:101:120:112:0:0:0:0:119:4:0:0:0:0:120*";

    Q7(Stack stack, List<DerivationRule> reduces) {
      super(stack,reduces);
    }

    @Override
    public Q1<Q7<Stack>> lp() {
      return new Q1<>(this,reduces);
    }

    @Override
    protected Q8<Q7<Stack>> BALANCED() {
      return new Q8<>(this,reduces);
    }

    @Override
    public Object $() {
      reduces.add(DerivationRule.deserialize(rule0));
      return pop().pop().pop().BALANCED().$();
    }
  }

  public static class Q8<Stack extends BaseState<? extends BaseState<? extends BaseState<? extends BaseState<?, ?, ?, ?>, ?, ?, ?>, ?, ?, ?>, ?, ?, ?>> extends BaseState<Stack, ErrorState, ErrorState, ErrorState> {
    private final String rule1 = "1,<BALANCED>,%lp%*-84:-19:0:5:115:114:0:19:106:97:118:97:46:117:116:105:108:46:65:114:114:97:121:76:105:115:116:120:-127:-46:29:-103:-57:97:-99:3:0:1:73:0:4:115:105:122:101:120:112:0:0:0:0:119:4:0:0:0:0:120*,<BALANCED>,%rp%*-84:-19:0:5:115:114:0:19:106:97:118:97:46:117:116:105:108:46:65:114:114:97:121:76:105:115:116:120:-127:-46:29:-103:-57:97:-99:3:0:1:73:0:4:115:105:122:101:120:112:0:0:0:0:119:4:0:0:0:0:120*,<BALANCED>";

    Q8(Stack stack, List<DerivationRule> reduces) {
      super(stack,reduces);
    }

    @Override
    public Object $() {
      reduces.add(DerivationRule.deserialize(rule1));
      return pop().pop().pop().pop().BALANCED().$();
    }
  }

  public static class Q9<Stack extends BaseState<? extends BaseState<?, ?, ?, ?>, ?, ?, ?>, BALANCED_2_rp_114007 extends BaseState<?, ?, ?, ?>> extends BaseState<Stack, ErrorState, Q12<Q9<Stack, ?>, BALANCED_2_rp_114007>, ErrorState> {
    Q9(Stack stack, List<DerivationRule> reduces) {
      super(stack,reduces);
    }

    @Override
    public Q12<Q9<Stack, ?>, BALANCED_2_rp_114007> rp() {
      return new Q12<>(this,reduces);
    }
  }

  public static class Q10<Stack extends BaseState<? extends BaseState<?, ?, ?, ?>, ?, ?, ?>, BALANCED_2_rp_114007 extends BaseState<?, ?, ?, ?>> extends BaseState<Stack, Q3<Q10<Stack, ?>, BALANCED_2_rp_114007>, BALANCED_2_rp_114007, Q11<Q10<Stack, ?>, BALANCED_2_rp_114007>> {
    private final String rule3 = "3,<BALANCED>,%lp%*-84:-19:0:5:115:114:0:19:106:97:118:97:46:117:116:105:108:46:65:114:114:97:121:76:105:115:116:120:-127:-46:29:-103:-57:97:-99:3:0:1:73:0:4:115:105:122:101:120:112:0:0:0:0:119:4:0:0:0:0:120*,%rp%*-84:-19:0:5:115:114:0:19:106:97:118:97:46:117:116:105:108:46:65:114:114:97:121:76:105:115:116:120:-127:-46:29:-103:-57:97:-99:3:0:1:73:0:4:115:105:122:101:120:112:0:0:0:0:119:4:0:0:0:0:120*";

    Q10(Stack stack, List<DerivationRule> reduces) {
      super(stack,reduces);
    }

    @Override
    public Q3<Q10<Stack, ?>, BALANCED_2_rp_114007> lp() {
      return new Q3<>(this,reduces);
    }

    @Override
    @SuppressWarnings({"unchecked"})
    public BALANCED_2_rp_114007 rp() {
      reduces.add(DerivationRule.deserialize(rule3));
      return (BALANCED_2_rp_114007)pop().pop().BALANCED().rp();
    }

    @Override
    protected Q11<Q10<Stack, ?>, BALANCED_2_rp_114007> BALANCED() {
      return new Q11<>(this,reduces);
    }
  }

  public static class Q11<Stack extends BaseState<? extends BaseState<? extends BaseState<?, ?, ?, ?>, ?, ?, ?>, ?, ?, ?>, BALANCED_3_rp_114007 extends BaseState<?, ?, ?, ?>> extends BaseState<Stack, ErrorState, BALANCED_3_rp_114007, ErrorState> {
    private final String rule2 = "2,<BALANCED>,%lp%*-84:-19:0:5:115:114:0:19:106:97:118:97:46:117:116:105:108:46:65:114:114:97:121:76:105:115:116:120:-127:-46:29:-103:-57:97:-99:3:0:1:73:0:4:115:105:122:101:120:112:0:0:0:0:119:4:0:0:0:0:120*,%rp%*-84:-19:0:5:115:114:0:19:106:97:118:97:46:117:116:105:108:46:65:114:114:97:121:76:105:115:116:120:-127:-46:29:-103:-57:97:-99:3:0:1:73:0:4:115:105:122:101:120:112:0:0:0:0:119:4:0:0:0:0:120*,<BALANCED>";

    Q11(Stack stack, List<DerivationRule> reduces) {
      super(stack,reduces);
    }

    @Override
    @SuppressWarnings({"unchecked"})
    public BALANCED_3_rp_114007 rp() {
      reduces.add(DerivationRule.deserialize(rule2));
      return (BALANCED_3_rp_114007)pop().pop().pop().BALANCED().rp();
    }
  }

  public static class Q12<Stack extends BaseState<? extends BaseState<? extends BaseState<?, ?, ?, ?>, ?, ?, ?>, ?, ?, ?>, BALANCED_3_rp_114007 extends BaseState<?, ?, ?, ?>> extends BaseState<Stack, Q3<Q12<Stack, ?>, BALANCED_3_rp_114007>, BALANCED_3_rp_114007, Q13<Q12<Stack, ?>, BALANCED_3_rp_114007>> {
    private final String rule0 = "0,<BALANCED>,%lp%*-84:-19:0:5:115:114:0:19:106:97:118:97:46:117:116:105:108:46:65:114:114:97:121:76:105:115:116:120:-127:-46:29:-103:-57:97:-99:3:0:1:73:0:4:115:105:122:101:120:112:0:0:0:0:119:4:0:0:0:0:120*,<BALANCED>,%rp%*-84:-19:0:5:115:114:0:19:106:97:118:97:46:117:116:105:108:46:65:114:114:97:121:76:105:115:116:120:-127:-46:29:-103:-57:97:-99:3:0:1:73:0:4:115:105:122:101:120:112:0:0:0:0:119:4:0:0:0:0:120*";

    Q12(Stack stack, List<DerivationRule> reduces) {
      super(stack,reduces);
    }

    @Override
    public Q3<Q12<Stack, ?>, BALANCED_3_rp_114007> lp() {
      return new Q3<>(this,reduces);
    }

    @Override
    @SuppressWarnings({"unchecked"})
    public BALANCED_3_rp_114007 rp() {
      reduces.add(DerivationRule.deserialize(rule0));
      return (BALANCED_3_rp_114007)pop().pop().pop().BALANCED().rp();
    }

    @Override
    protected Q13<Q12<Stack, ?>, BALANCED_3_rp_114007> BALANCED() {
      return new Q13<>(this,reduces);
    }
  }

  public static class Q13<Stack extends BaseState<? extends BaseState<? extends BaseState<? extends BaseState<?, ?, ?, ?>, ?, ?, ?>, ?, ?, ?>, ?, ?, ?>, BALANCED_4_rp_114007 extends BaseState<?, ?, ?, ?>> extends BaseState<Stack, ErrorState, BALANCED_4_rp_114007, ErrorState> {
    private final String rule1 = "1,<BALANCED>,%lp%*-84:-19:0:5:115:114:0:19:106:97:118:97:46:117:116:105:108:46:65:114:114:97:121:76:105:115:116:120:-127:-46:29:-103:-57:97:-99:3:0:1:73:0:4:115:105:122:101:120:112:0:0:0:0:119:4:0:0:0:0:120*,<BALANCED>,%rp%*-84:-19:0:5:115:114:0:19:106:97:118:97:46:117:116:105:108:46:65:114:114:97:121:76:105:115:116:120:-127:-46:29:-103:-57:97:-99:3:0:1:73:0:4:115:105:122:101:120:112:0:0:0:0:119:4:0:0:0:0:120*,<BALANCED>";

    Q13(Stack stack, List<DerivationRule> reduces) {
      super(stack,reduces);
    }

    @Override
    @SuppressWarnings({"unchecked"})
    public BALANCED_4_rp_114007 rp() {
      reduces.add(DerivationRule.deserialize(rule1));
      return (BALANCED_4_rp_114007)pop().pop().pop().pop().BALANCED().rp();
    }
  }
}

