package org.spartan.fajita.api.examples.balancedParenthesis.states;

public class AutoGeneratedBalancedParenthesisStates {
  @java.lang.SuppressWarnings({"all"})
  interface IStack<Tail extends IStack> {
  }

  @java.lang.SuppressWarnings({"all"})
  public static class EmptyStack implements IStack<EmptyStack> {
  }

  public static class ErrorState extends BaseState<EmptyStack, ErrorState, ErrorState, ErrorState, ErrorState> {
    ErrorState() {
      super(new EmptyStack());
    }
  }

  @java.lang.SuppressWarnings({"serial"})
  public static class ParseError extends java.lang.RuntimeException {
    ParseError(final java.lang.String msg) {
      super(msg);
    }
  }

  @java.lang.SuppressWarnings({"rawtypes"})
  public abstract static class BaseState<Stack extends IStack<?>, build extends BaseState, lp extends BaseState, rp extends BaseState, BALANCED extends BaseState> implements IStack<Stack> {
    private final Stack stack;

    BaseState(final Stack stack) {
      this.stack = stack;
    }

    protected Stack pop() {
      return stack;
    }

    protected build build() {
      throw new ParseError("unexpected symbol on state " + getClass().getSimpleName());
    }

    protected lp lp() {
      throw new ParseError("unexpected symbol on state " + getClass().getSimpleName());
    }

    protected rp rp() {
      throw new ParseError("unexpected symbol on state " + getClass().getSimpleName());
    }

    protected BALANCED BALANCED() {
      throw new ParseError("unexpected symbol on state " + getClass().getSimpleName());
    }

    protected Object $() {
      throw new ParseError("unexpected symbol on state " + getClass().getSimpleName());
    }
  }

  public static class Q0 extends BaseState<EmptyStack, ErrorState, Q2<Q0>, ErrorState, Q1<Q0>> {
    public Q0() {
      super(new EmptyStack());
    }

    @java.lang.Override
    public Q2<Q0> lp() {
      return new Q2<>(this);
    }

    @java.lang.Override
    protected Q1<Q0> BALANCED() {
      return new Q1<>(this);
    }
  }

  public static class Q1<Stack extends BaseState<?, ?, ?, ?, ?>> extends BaseState<Stack, ErrorState, ErrorState, ErrorState, ErrorState> {
    Q1(Stack stack) {
      super(stack);
    }

    @java.lang.Override
    public java.lang.Object $() {
      return new Object();
    }
  }

  public static class Q2<Stack extends BaseState<?, ?, ?, ?, ?>> extends BaseState<Stack, ErrorState, Q4<Q2<Stack>, Q12<Q3<Q2<Stack>>>>, Q5<Q2<Stack>>, Q3<Q2<Stack>>> {
    Q2(Stack stack) {
      super(stack);
    }

    @java.lang.Override
    public Q4<Q2<Stack>, Q12<Q3<Q2<Stack>>>> lp() {
      return new Q4<>(this);
    }

    @java.lang.Override
    public Q5<Q2<Stack>> rp() {
      return new Q5<>(this);
    }

    @java.lang.Override
    protected Q3<Q2<Stack>> BALANCED() {
      return new Q3<>(this);
    }
  }

  public static class Q3<Stack extends BaseState<? extends BaseState<?, ?, ?, ?, ?>, ?, ?, ?, ?>> extends BaseState<Stack, ErrorState, ErrorState, Q12<Q3<Stack>>, ErrorState> {
    Q3(Stack stack) {
      super(stack);
    }

    @java.lang.Override
    public Q12<Q3<Stack>> rp() {
      return new Q12<>(this);
    }
  }

  public static class Q4<Stack extends BaseState<?, ?, ?, ?, ?>, BALANCED_1_rp extends BaseState<?, ?, ?, ?, ?>> extends BaseState<Stack, ErrorState, Q4<Q4<Stack, ?>, Q10<Q7<Q4<Stack, ?>, ?>, BALANCED_1_rp>>, Q8<Q4<Stack, ?>, BALANCED_1_rp>, Q7<Q4<Stack, ?>, BALANCED_1_rp>> {
    Q4(Stack stack) {
      super(stack);
    }

    @java.lang.Override
    public Q4<Q4<Stack, ?>, Q10<Q7<Q4<Stack, ?>, ?>, BALANCED_1_rp>> lp() {
      return new Q4<>(this);
    }

    @java.lang.Override
    public Q8<Q4<Stack, ?>, BALANCED_1_rp> rp() {
      return new Q8<>(this);
    }

    @java.lang.Override
    protected Q7<Q4<Stack, ?>, BALANCED_1_rp> BALANCED() {
      return new Q7<>(this);
    }
  }

  public static class Q5<Stack extends BaseState<? extends BaseState<?, ?, ?, ?, ?>, ?, ?, ?, ?>> extends BaseState<Stack, ErrorState, Q2<Q5<Stack>>, ErrorState, Q6<Q5<Stack>>> {
    Q5(Stack stack) {
      super(stack);
    }

    @java.lang.Override
    public Q2<Q5<Stack>> lp() {
      return new Q2<>(this);
    }

    @java.lang.Override
    protected Q6<Q5<Stack>> BALANCED() {
      return new Q6<>(this);
    }

    @java.lang.Override
    public java.lang.Object $() {
      return pop().pop().$();
    }
  }

  public static class Q6<Stack extends BaseState<? extends BaseState<? extends BaseState<?, ?, ?, ?, ?>, ?, ?, ?, ?>, ?, ?, ?, ?>> extends BaseState<Stack, ErrorState, ErrorState, ErrorState, ErrorState> {
    Q6(Stack stack) {
      super(stack);
    }

    @java.lang.Override
    public java.lang.Object $() {
      return pop().pop().pop().$();
    }
  }

  public static class Q7<Stack extends BaseState<? extends BaseState<?, ?, ?, ?, ?>, ?, ?, ?, ?>, BALANCED_2_rp extends BaseState<?, ?, ?, ?, ?>> extends BaseState<Stack, ErrorState, ErrorState, Q10<Q7<Stack, ?>, BALANCED_2_rp>, ErrorState> {
    Q7(Stack stack) {
      super(stack);
    }

    @java.lang.Override
    public Q10<Q7<Stack, ?>, BALANCED_2_rp> rp() {
      return new Q10<>(this);
    }
  }

  public static class Q8<Stack extends BaseState<? extends BaseState<?, ?, ?, ?, ?>, ?, ?, ?, ?>, BALANCED_2_rp extends BaseState<?, ?, ?, ?, ?>> extends BaseState<Stack, ErrorState, Q4<Q8<Stack, ?>, BALANCED_2_rp>, BALANCED_2_rp, Q9<Q8<Stack, ?>, BALANCED_2_rp>> {
    Q8(Stack stack) {
      super(stack);
    }

    @java.lang.Override
    public Q4<Q8<Stack, ?>, BALANCED_2_rp> lp() {
      return new Q4<>(this);
    }

    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked"})
    public BALANCED_2_rp rp() {
      return (BALANCED_2_rp)pop().pop().BALANCED().rp();
    }

    @java.lang.Override
    protected Q9<Q8<Stack, ?>, BALANCED_2_rp> BALANCED() {
      return new Q9<>(this);
    }
  }

  public static class Q9<Stack extends BaseState<? extends BaseState<? extends BaseState<?, ?, ?, ?, ?>, ?, ?, ?, ?>, ?, ?, ?, ?>, BALANCED_3_rp extends BaseState<?, ?, ?, ?, ?>> extends BaseState<Stack, ErrorState, ErrorState, BALANCED_3_rp, ErrorState> {
    Q9(Stack stack) {
      super(stack);
    }

    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked"})
    public BALANCED_3_rp rp() {
      return (BALANCED_3_rp)pop().pop().pop().BALANCED().rp();
    }
  }

  public static class Q10<Stack extends BaseState<? extends BaseState<? extends BaseState<?, ?, ?, ?, ?>, ?, ?, ?, ?>, ?, ?, ?, ?>, BALANCED_3_rp extends BaseState<?, ?, ?, ?, ?>> extends BaseState<Stack, ErrorState, Q4<Q10<Stack, ?>, BALANCED_3_rp>, BALANCED_3_rp, Q11<Q10<Stack, ?>, BALANCED_3_rp>> {
    Q10(Stack stack) {
      super(stack);
    }

    @java.lang.Override
    public Q4<Q10<Stack, ?>, BALANCED_3_rp> lp() {
      return new Q4<>(this);
    }

    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked"})
    public BALANCED_3_rp rp() {
      return (BALANCED_3_rp)pop().pop().pop().BALANCED().rp();
    }

    @java.lang.Override
    protected Q11<Q10<Stack, ?>, BALANCED_3_rp> BALANCED() {
      return new Q11<>(this);
    }
  }

  public static class Q11<Stack extends BaseState<? extends BaseState<? extends BaseState<? extends BaseState<?, ?, ?, ?, ?>, ?, ?, ?, ?>, ?, ?, ?, ?>, ?, ?, ?, ?>, BALANCED_4_rp extends BaseState<?, ?, ?, ?, ?>> extends BaseState<Stack, ErrorState, ErrorState, BALANCED_4_rp, ErrorState> {
    Q11(Stack stack) {
      super(stack);
    }

    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked"})
    public BALANCED_4_rp rp() {
      return (BALANCED_4_rp)pop().pop().pop().pop().BALANCED().rp();
    }
  }

  public static class Q12<Stack extends BaseState<? extends BaseState<? extends BaseState<?, ?, ?, ?, ?>, ?, ?, ?, ?>, ?, ?, ?, ?>> extends BaseState<Stack, ErrorState, Q2<Q12<Stack>>, ErrorState, Q13<Q12<Stack>>> {
    Q12(Stack stack) {
      super(stack);
    }

    @java.lang.Override
    public Q2<Q12<Stack>> lp() {
      return new Q2<>(this);
    }

    @java.lang.Override
    protected Q13<Q12<Stack>> BALANCED() {
      return new Q13<>(this);
    }

    @java.lang.Override
    public java.lang.Object $() {
      return pop().pop().pop().$();
    }
  }

  public static class Q13<Stack extends BaseState<? extends BaseState<? extends BaseState<? extends BaseState<?, ?, ?, ?, ?>, ?, ?, ?, ?>, ?, ?, ?, ?>, ?, ?, ?, ?>> extends BaseState<Stack, ErrorState, ErrorState, ErrorState, ErrorState> {
    Q13(Stack stack) {
      super(stack);
    }

    @java.lang.Override
    public java.lang.Object $() {
      return pop().pop().pop().pop().$();
    }
  }
}
