package org.spartan.fajita.api.examples.lalr.states;
public class AutoGeneratedStrongerThanLALRStates {
  @java.lang.SuppressWarnings({"all"})
  interface IStack<Tail extends IStack> {
  }

  @java.lang.SuppressWarnings({"all"})
  public static class EmptyStack implements IStack<EmptyStack> {
  }

  public static class ErrorState extends BaseState<EmptyStack, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState> {
    ErrorState() {
      super(new EmptyStack(),null);
    }
  }

  @java.lang.SuppressWarnings({"serial"})
  public static class ParseError extends java.lang.RuntimeException {
    ParseError(final java.lang.String msg) {
      super(msg);
    }
  }

  @java.lang.SuppressWarnings({"rawtypes"})
  public abstract static class BaseState<Stack extends IStack<?>, a extends BaseState, b extends BaseState, c extends BaseState, d extends BaseState, e extends BaseState, E extends BaseState, F extends BaseState, S extends BaseState> implements IStack<Stack> {
    private final Stack stack;

    protected final java.util.List<org.spartan.fajita.api.bnf.rules.DerivationRule> reduces;

    BaseState(final Stack stack, final java.util.List<org.spartan.fajita.api.bnf.rules.DerivationRule> reduces) {
      this.stack = stack;
      this.reduces = reduces;
    }

    protected Stack pop() {
      return stack;
    }

    protected a a() {
      throw new ParseError("unexpected symbol on state " + getClass().getSimpleName());
    }

    protected b b() {
      throw new ParseError("unexpected symbol on state " + getClass().getSimpleName());
    }

    protected c c() {
      throw new ParseError("unexpected symbol on state " + getClass().getSimpleName());
    }

    protected d d() {
      throw new ParseError("unexpected symbol on state " + getClass().getSimpleName());
    }

    protected e e() {
      throw new ParseError("unexpected symbol on state " + getClass().getSimpleName());
    }

    protected E E() {
      throw new ParseError("unexpected symbol on state " + getClass().getSimpleName());
    }

    protected F F() {
      throw new ParseError("unexpected symbol on state " + getClass().getSimpleName());
    }

    protected S S() {
      throw new ParseError("unexpected symbol on state " + getClass().getSimpleName());
    }

    protected Object $() {
      throw new ParseError("unexpected symbol on state " + getClass().getSimpleName());
    }
  }

  public static class Q0 extends BaseState<EmptyStack, Q3<Q0>, Q1<Q0>, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState, Q2<Q0>> {
    public Q0() {
      super(new EmptyStack(),new java.util.ArrayList<>());
    }

    @java.lang.Override
    public Q3<Q0> a() {
      return new Q3<>(this,reduces);
    }

    @java.lang.Override
    public Q1<Q0> b() {
      return new Q1<>(this,reduces);
    }

    @java.lang.Override
    protected Q2<Q0> S() {
      return new Q2<>(this,reduces);
    }
  }

  public static class Q1<Stack extends BaseState<?, ?, ?, ?, ?, ?, ?, ?, ?>> extends BaseState<Stack, ErrorState, ErrorState, ErrorState, ErrorState, Q11<Q1<Stack>, Q12<Q10<Q1<Stack>>>, Q13<Q9<Q1<Stack>>>>, Q10<Q1<Stack>>, Q9<Q1<Stack>>, ErrorState> {
    Q1(Stack stack, java.util.List<org.spartan.fajita.api.bnf.rules.DerivationRule> reduces) {
      super(stack,reduces);
    }

    @java.lang.Override
    public Q11<Q1<Stack>, Q12<Q10<Q1<Stack>>>, Q13<Q9<Q1<Stack>>>> e() {
      return new Q11<>(this,reduces);
    }

    @java.lang.Override
    protected Q10<Q1<Stack>> E() {
      return new Q10<>(this,reduces);
    }

    @java.lang.Override
    protected Q9<Q1<Stack>> F() {
      return new Q9<>(this,reduces);
    }
  }

  public static class Q2<Stack extends BaseState<?, ?, ?, ?, ?, ?, ?, ?, ?>> extends BaseState<Stack, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState> {
    Q2(Stack stack, java.util.List<org.spartan.fajita.api.bnf.rules.DerivationRule> reduces) {
      super(stack,reduces);
    }

    @java.lang.Override
    public java.lang.Object $() {
      org.spartan.fajita.api.examples.utils.ASTViewer.showASTs(org.spartan.fajita.api.Main.generateAST(reduces));
      System.out.println("finished");
      return new Object();
    }
  }

  public static class Q3<Stack extends BaseState<?, ?, ?, ?, ?, ?, ?, ?, ?>> extends BaseState<Stack, ErrorState, ErrorState, ErrorState, ErrorState, Q6<Q3<Stack>, Q7<Q5<Q3<Stack>>>, Q8<Q4<Q3<Stack>>>>, Q5<Q3<Stack>>, Q4<Q3<Stack>>, ErrorState> {
    Q3(Stack stack, java.util.List<org.spartan.fajita.api.bnf.rules.DerivationRule> reduces) {
      super(stack,reduces);
    }

    @java.lang.Override
    public Q6<Q3<Stack>, Q7<Q5<Q3<Stack>>>, Q8<Q4<Q3<Stack>>>> e() {
      return new Q6<>(this,reduces);
    }

    @java.lang.Override
    protected Q5<Q3<Stack>> E() {
      return new Q5<>(this,reduces);
    }

    @java.lang.Override
    protected Q4<Q3<Stack>> F() {
      return new Q4<>(this,reduces);
    }
  }

  public static class Q4<Stack extends BaseState<? extends BaseState<?, ?, ?, ?, ?, ?, ?, ?, ?>, ?, ?, ?, ?, ?, ?, ?, ?>> extends BaseState<Stack, ErrorState, ErrorState, ErrorState, Q8<Q4<Stack>>, ErrorState, ErrorState, ErrorState, ErrorState> {
    Q4(Stack stack, java.util.List<org.spartan.fajita.api.bnf.rules.DerivationRule> reduces) {
      super(stack,reduces);
    }

    @java.lang.Override
    public Q8<Q4<Stack>> d() {
      return new Q8<>(this,reduces);
    }
  }

  public static class Q5<Stack extends BaseState<? extends BaseState<?, ?, ?, ?, ?, ?, ?, ?, ?>, ?, ?, ?, ?, ?, ?, ?, ?>> extends BaseState<Stack, ErrorState, ErrorState, Q7<Q5<Stack>>, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState> {
    Q5(Stack stack, java.util.List<org.spartan.fajita.api.bnf.rules.DerivationRule> reduces) {
      super(stack,reduces);
    }

    @java.lang.Override
    public Q7<Q5<Stack>> c() {
      return new Q7<>(this,reduces);
    }
  }

  public static class Q6<Stack extends BaseState<?, ?, ?, ?, ?, ?, ?, ?, ?>, E_1_c extends BaseState<?, ?, ?, ?, ?, ?, ?, ?, ?>, F_1_d extends BaseState<?, ?, ?, ?, ?, ?, ?, ?, ?>> extends BaseState<Stack, ErrorState, ErrorState, E_1_c, F_1_d, ErrorState, ErrorState, ErrorState, ErrorState> {
    private final java.lang.String rule5 = "5,<E>,%e()%";

    private final java.lang.String rule4 = "4,<F>,%e()%";

    Q6(Stack stack, java.util.List<org.spartan.fajita.api.bnf.rules.DerivationRule> reduces) {
      super(stack,reduces);
    }

    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked"})
    public E_1_c c() {
      reduces.add(org.spartan.fajita.api.bnf.rules.DerivationRule.deserialize(rule5));
      return (E_1_c)pop().E().c();
    }

    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked"})
    public F_1_d d() {
      reduces.add(org.spartan.fajita.api.bnf.rules.DerivationRule.deserialize(rule4));
      return (F_1_d)pop().F().d();
    }
  }

  public static class Q7<Stack extends BaseState<? extends BaseState<? extends BaseState<?, ?, ?, ?, ?, ?, ?, ?, ?>, ?, ?, ?, ?, ?, ?, ?, ?>, ?, ?, ?, ?, ?, ?, ?, ?>> extends BaseState<Stack, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState> {
    private final java.lang.String rule0 = "0,<S>,%a()%,<E>,%c()%";

    Q7(Stack stack, java.util.List<org.spartan.fajita.api.bnf.rules.DerivationRule> reduces) {
      super(stack,reduces);
    }

    @java.lang.Override
    public java.lang.Object $() {
      reduces.add(org.spartan.fajita.api.bnf.rules.DerivationRule.deserialize(rule0));
      return pop().pop().pop().S().$();
    }
  }

  public static class Q8<Stack extends BaseState<? extends BaseState<? extends BaseState<?, ?, ?, ?, ?, ?, ?, ?, ?>, ?, ?, ?, ?, ?, ?, ?, ?>, ?, ?, ?, ?, ?, ?, ?, ?>> extends BaseState<Stack, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState> {
    private final java.lang.String rule1 = "1,<S>,%a()%,<F>,%d()%";

    Q8(Stack stack, java.util.List<org.spartan.fajita.api.bnf.rules.DerivationRule> reduces) {
      super(stack,reduces);
    }

    @java.lang.Override
    public java.lang.Object $() {
      reduces.add(org.spartan.fajita.api.bnf.rules.DerivationRule.deserialize(rule1));
      return pop().pop().pop().S().$();
    }
  }

  public static class Q9<Stack extends BaseState<? extends BaseState<?, ?, ?, ?, ?, ?, ?, ?, ?>, ?, ?, ?, ?, ?, ?, ?, ?>> extends BaseState<Stack, ErrorState, ErrorState, Q13<Q9<Stack>>, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState> {
    Q9(Stack stack, java.util.List<org.spartan.fajita.api.bnf.rules.DerivationRule> reduces) {
      super(stack,reduces);
    }

    @java.lang.Override
    public Q13<Q9<Stack>> c() {
      return new Q13<>(this,reduces);
    }
  }

  public static class Q10<Stack extends BaseState<? extends BaseState<?, ?, ?, ?, ?, ?, ?, ?, ?>, ?, ?, ?, ?, ?, ?, ?, ?>> extends BaseState<Stack, ErrorState, ErrorState, ErrorState, Q12<Q10<Stack>>, ErrorState, ErrorState, ErrorState, ErrorState> {
    Q10(Stack stack, java.util.List<org.spartan.fajita.api.bnf.rules.DerivationRule> reduces) {
      super(stack,reduces);
    }

    @java.lang.Override
    public Q12<Q10<Stack>> d() {
      return new Q12<>(this,reduces);
    }
  }

  public static class Q11<Stack extends BaseState<?, ?, ?, ?, ?, ?, ?, ?, ?>, E_1_d extends BaseState<?, ?, ?, ?, ?, ?, ?, ?, ?>, F_1_c extends BaseState<?, ?, ?, ?, ?, ?, ?, ?, ?>> extends BaseState<Stack, ErrorState, ErrorState, F_1_c, E_1_d, ErrorState, ErrorState, ErrorState, ErrorState> {
    private final java.lang.String rule5 = "5,<E>,%e()%";

    private final java.lang.String rule4 = "4,<F>,%e()%";

    Q11(Stack stack, java.util.List<org.spartan.fajita.api.bnf.rules.DerivationRule> reduces) {
      super(stack,reduces);
    }

    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked"})
    public F_1_c c() {
      reduces.add(org.spartan.fajita.api.bnf.rules.DerivationRule.deserialize(rule4));
      return (F_1_c)pop().F().c();
    }

    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked"})
    public E_1_d d() {
      reduces.add(org.spartan.fajita.api.bnf.rules.DerivationRule.deserialize(rule5));
      return (E_1_d)pop().E().d();
    }
  }

  public static class Q12<Stack extends BaseState<? extends BaseState<? extends BaseState<?, ?, ?, ?, ?, ?, ?, ?, ?>, ?, ?, ?, ?, ?, ?, ?, ?>, ?, ?, ?, ?, ?, ?, ?, ?>> extends BaseState<Stack, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState> {
    private final java.lang.String rule3 = "3,<S>,%b()%,<E>,%d()%";

    Q12(Stack stack, java.util.List<org.spartan.fajita.api.bnf.rules.DerivationRule> reduces) {
      super(stack,reduces);
    }

    @java.lang.Override
    public java.lang.Object $() {
      reduces.add(org.spartan.fajita.api.bnf.rules.DerivationRule.deserialize(rule3));
      return pop().pop().pop().S().$();
    }
  }

  public static class Q13<Stack extends BaseState<? extends BaseState<? extends BaseState<?, ?, ?, ?, ?, ?, ?, ?, ?>, ?, ?, ?, ?, ?, ?, ?, ?>, ?, ?, ?, ?, ?, ?, ?, ?>> extends BaseState<Stack, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState, ErrorState> {
    private final java.lang.String rule2 = "2,<S>,%b()%,<F>,%c()%";

    Q13(Stack stack, java.util.List<org.spartan.fajita.api.bnf.rules.DerivationRule> reduces) {
      super(stack,reduces);
    }

    @java.lang.Override
    public java.lang.Object $() {
      reduces.add(org.spartan.fajita.api.bnf.rules.DerivationRule.deserialize(rule2));
      return pop().pop().pop().S().$();
    }
  }
}

