package roth.ori.fling.junk;@java.lang.SuppressWarnings("all") public class Literal{public static π_Literal1_$ oneOrMore(roth.ori.fling.export.ASTNode arg1){Λ Λ = new Λ();Λ.recordTerminal(roth.ori.fling.examples.EBNF.Term.oneOrMore,arg1);return Λ;}public static π_Literal2_$ oneOrMore(java.lang.String arg1){Λ Λ = new Λ();Λ.recordTerminal(roth.ori.fling.examples.EBNF.Term.oneOrMore,arg1);return Λ;}public static π_Literal3_$ noneOrMore(roth.ori.fling.export.ASTNode arg1){Λ Λ = new Λ();Λ.recordTerminal(roth.ori.fling.examples.EBNF.Term.noneOrMore,arg1);return Λ;}public static π_Literal4_$ noneOrMore(java.lang.String arg1){Λ Λ = new Λ();Λ.recordTerminal(roth.ori.fling.examples.EBNF.Term.noneOrMore,arg1);return Λ;}public static π_Literal5_$ option(roth.ori.fling.export.ASTNode arg1){Λ Λ = new Λ();Λ.recordTerminal(roth.ori.fling.examples.EBNF.Term.option,arg1);return Λ;}public static π_Literal6_$ option(java.lang.String arg1){Λ Λ = new Λ();Λ.recordTerminal(roth.ori.fling.examples.EBNF.Term.option,arg1);return Λ;}public static π_Literal7_$ either(roth.ori.fling.export.ASTNode arg1,roth.ori.fling.export.ASTNode arg2){Λ Λ = new Λ();Λ.recordTerminal(roth.ori.fling.examples.EBNF.Term.either,arg1,arg2);return Λ;}public static π_Literal8_$ either(roth.ori.fling.export.ASTNode arg1,java.lang.String arg2){Λ Λ = new Λ();Λ.recordTerminal(roth.ori.fling.examples.EBNF.Term.either,arg1,arg2);return Λ;}public static π_Literal9_$ either(java.lang.String arg1,roth.ori.fling.export.ASTNode arg2){Λ Λ = new Λ();Λ.recordTerminal(roth.ori.fling.examples.EBNF.Term.either,arg1,arg2);return Λ;}public static π_Literal10_$ either(java.lang.String arg1,java.lang.String arg2){Λ Λ = new Λ();Λ.recordTerminal(roth.ori.fling.examples.EBNF.Term.either,arg1,arg2);return Λ;}public static π_Literal11_$ attribute(java.lang.String arg1,java.lang.Object... arg2){Λ Λ = new Λ();Λ.recordTerminal(roth.ori.fling.examples.EBNF.Term.attribute,arg1,arg2);return Λ;}public interface π_ClauseTail1_$ extends roth.ori.fling.export.ASTNode{public π_ClauseTail1_$ and(roth.ori.fling.export.ASTNode arg1);public π_ClauseTail1_$ or(roth.ori.fling.export.ASTNode arg1);public π_ClauseTail1_$ and(java.lang.String arg1);public π_ClauseTail1_$ or(java.lang.String arg1);}public interface π_Literal1_$ extends roth.ori.fling.export.ASTNode{public π_ClauseTail1_$ and(roth.ori.fling.export.ASTNode arg1);public π_ClauseTail1_$ or(roth.ori.fling.export.ASTNode arg1);public π_ClauseTail1_$ and(java.lang.String arg1);public π_ClauseTail1_$ or(java.lang.String arg1);}public interface π_Literal2_$ extends roth.ori.fling.export.ASTNode{public π_ClauseTail1_$ and(roth.ori.fling.export.ASTNode arg1);public π_ClauseTail1_$ or(roth.ori.fling.export.ASTNode arg1);public π_ClauseTail1_$ and(java.lang.String arg1);public π_ClauseTail1_$ or(java.lang.String arg1);}public interface π_Literal3_$ extends roth.ori.fling.export.ASTNode{public π_ClauseTail1_$ and(roth.ori.fling.export.ASTNode arg1);public π_ClauseTail1_$ or(roth.ori.fling.export.ASTNode arg1);public π_ClauseTail1_$ and(java.lang.String arg1);public π_ClauseTail1_$ or(java.lang.String arg1);}public interface π_Literal4_$ extends roth.ori.fling.export.ASTNode{public π_ClauseTail1_$ and(roth.ori.fling.export.ASTNode arg1);public π_ClauseTail1_$ or(roth.ori.fling.export.ASTNode arg1);public π_ClauseTail1_$ and(java.lang.String arg1);public π_ClauseTail1_$ or(java.lang.String arg1);}public interface π_Literal5_$ extends roth.ori.fling.export.ASTNode{public π_ClauseTail1_$ and(roth.ori.fling.export.ASTNode arg1);public π_ClauseTail1_$ or(roth.ori.fling.export.ASTNode arg1);public π_ClauseTail1_$ and(java.lang.String arg1);public π_ClauseTail1_$ or(java.lang.String arg1);}public interface π_Literal6_$ extends roth.ori.fling.export.ASTNode{public π_ClauseTail1_$ and(roth.ori.fling.export.ASTNode arg1);public π_ClauseTail1_$ or(roth.ori.fling.export.ASTNode arg1);public π_ClauseTail1_$ and(java.lang.String arg1);public π_ClauseTail1_$ or(java.lang.String arg1);}public interface π_Literal7_$ extends roth.ori.fling.export.ASTNode{public π_ClauseTail1_$ and(roth.ori.fling.export.ASTNode arg1);public π_ClauseTail1_$ or(roth.ori.fling.export.ASTNode arg1);public π_ClauseTail1_$ and(java.lang.String arg1);public π_ClauseTail1_$ or(java.lang.String arg1);}public interface π_Literal8_$ extends roth.ori.fling.export.ASTNode{public π_ClauseTail1_$ and(roth.ori.fling.export.ASTNode arg1);public π_ClauseTail1_$ or(roth.ori.fling.export.ASTNode arg1);public π_ClauseTail1_$ and(java.lang.String arg1);public π_ClauseTail1_$ or(java.lang.String arg1);}public interface π_Literal9_$ extends roth.ori.fling.export.ASTNode{public π_ClauseTail1_$ and(roth.ori.fling.export.ASTNode arg1);public π_ClauseTail1_$ or(roth.ori.fling.export.ASTNode arg1);public π_ClauseTail1_$ and(java.lang.String arg1);public π_ClauseTail1_$ or(java.lang.String arg1);}public interface π_Literal10_$ extends roth.ori.fling.export.ASTNode{public π_ClauseTail1_$ and(roth.ori.fling.export.ASTNode arg1);public π_ClauseTail1_$ or(roth.ori.fling.export.ASTNode arg1);public π_ClauseTail1_$ and(java.lang.String arg1);public π_ClauseTail1_$ or(java.lang.String arg1);}public interface π_Literal11_$ extends roth.ori.fling.export.ASTNode{public π_ClauseTail1_$ and(roth.ori.fling.export.ASTNode arg1);public π_ClauseTail1_$ or(roth.ori.fling.export.ASTNode arg1);public π_ClauseTail1_$ and(java.lang.String arg1);public π_ClauseTail1_$ or(java.lang.String arg1);}private static class Λ extends roth.ori.fling.export.FluentAPIRecorder implements π_Literal1_$,π_ClauseTail1_$,π_Literal2_$,π_Literal3_$,π_Literal4_$,π_Literal5_$,π_Literal6_$,π_Literal7_$,π_Literal8_$,π_Literal9_$,π_Literal10_$,π_Literal11_$,roth.ori.fling.export.ASTNode{public Λ oneOrMore(roth.ori.fling.export.ASTNode arg1){recordTerminal(roth.ori.fling.examples.EBNF.Term.oneOrMore,arg1);return this;}public Λ oneOrMore(java.lang.String arg1){recordTerminal(roth.ori.fling.examples.EBNF.Term.oneOrMore,arg1);return this;}public Λ noneOrMore(roth.ori.fling.export.ASTNode arg1){recordTerminal(roth.ori.fling.examples.EBNF.Term.noneOrMore,arg1);return this;}public Λ noneOrMore(java.lang.String arg1){recordTerminal(roth.ori.fling.examples.EBNF.Term.noneOrMore,arg1);return this;}public Λ option(roth.ori.fling.export.ASTNode arg1){recordTerminal(roth.ori.fling.examples.EBNF.Term.option,arg1);return this;}public Λ option(java.lang.String arg1){recordTerminal(roth.ori.fling.examples.EBNF.Term.option,arg1);return this;}public Λ either(roth.ori.fling.export.ASTNode arg1,roth.ori.fling.export.ASTNode arg2){recordTerminal(roth.ori.fling.examples.EBNF.Term.either,arg1,arg2);return this;}public Λ either(roth.ori.fling.export.ASTNode arg1,java.lang.String arg2){recordTerminal(roth.ori.fling.examples.EBNF.Term.either,arg1,arg2);return this;}public Λ either(java.lang.String arg1,roth.ori.fling.export.ASTNode arg2){recordTerminal(roth.ori.fling.examples.EBNF.Term.either,arg1,arg2);return this;}public Λ either(java.lang.String arg1,java.lang.String arg2){recordTerminal(roth.ori.fling.examples.EBNF.Term.either,arg1,arg2);return this;}public Λ attribute(java.lang.String arg1,java.lang.Object... arg2){recordTerminal(roth.ori.fling.examples.EBNF.Term.attribute,arg1,arg2);return this;}public Λ and(roth.ori.fling.export.ASTNode arg1){recordTerminal(roth.ori.fling.examples.EBNF.Term.and,arg1);return this;}public Λ or(roth.ori.fling.export.ASTNode arg1){recordTerminal(roth.ori.fling.examples.EBNF.Term.or,arg1);return this;}public Λ and(java.lang.String arg1){recordTerminal(roth.ori.fling.examples.EBNF.Term.and,arg1);return this;}public Λ or(java.lang.String arg1){recordTerminal(roth.ori.fling.examples.EBNF.Term.or,arg1);return this;}Λ(){super(new roth.ori.fling.examples.EBNF().bnf().ebnf().makeSubBNF(roth.ori.fling.examples.EBNF.NT.Literal),"roth.ori.fling.junk");}}}