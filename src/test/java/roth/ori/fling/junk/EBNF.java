package roth.ori.fling.junk;@java.lang.SuppressWarnings("all") public class EBNF{public static π_EBNF2Rule1To_$ derive(java.lang.String arg1){Λ Λ = new Λ();Λ.recordTerminal(roth.ori.fling.examples.EBNF.Term.derive,arg1);return Λ;}public interface ${roth.ori.fling.junk.EBNFAST.EBNF $();}public interface π__derive1and1or1and2or2$<derive1,and1,or1,and2,or2>{public derive1 derive(java.lang.String arg1);public and1 and(roth.ori.fling.export.ASTNode arg1);public or1 or(roth.ori.fling.export.ASTNode arg1);public and2 and(java.lang.String arg1);public or2 or(java.lang.String arg1);roth.ori.fling.junk.EBNFAST.EBNF $();}public interface π_ClauseTail1_derive1$<derive1>{public derive1 derive(java.lang.String arg1);public π_ClauseTail1_derive1$<derive1> and(roth.ori.fling.export.ASTNode arg1);public π_ClauseTail1_derive1$<derive1> or(roth.ori.fling.export.ASTNode arg1);public π_ClauseTail1_derive1$<derive1> and(java.lang.String arg1);public π_ClauseTail1_derive1$<derive1> or(java.lang.String arg1);roth.ori.fling.junk.EBNFAST.EBNF $();}public interface π_EBNF2Rule1To_${public π__derive1and1or1and2or2$<π_EBNF2Rule1To_$,π_ClauseTail1_derive1$<π_EBNF2Rule1To_$>,π_ClauseTail1_derive1$<π_EBNF2Rule1To_$>,π_ClauseTail1_derive1$<π_EBNF2Rule1To_$>,π_ClauseTail1_derive1$<π_EBNF2Rule1To_$>> to(roth.ori.fling.export.ASTNode arg1);public π__derive1and1or1and2or2$<π_EBNF2Rule1To_$,π_ClauseTail1_derive1$<π_EBNF2Rule1To_$>,π_ClauseTail1_derive1$<π_EBNF2Rule1To_$>,π_ClauseTail1_derive1$<π_EBNF2Rule1To_$>,π_ClauseTail1_derive1$<π_EBNF2Rule1To_$>> to(java.lang.String arg1);}private static class Λ extends roth.ori.fling.export.FluentAPIRecorder implements $,π_EBNF2Rule1To_$,π__derive1and1or1and2or2$,π_ClauseTail1_derive1$,roth.ori.fling.export.ASTNode{public Λ derive(java.lang.String arg1){recordTerminal(roth.ori.fling.examples.EBNF.Term.derive,arg1);return this;}public Λ to(roth.ori.fling.export.ASTNode arg1){recordTerminal(roth.ori.fling.examples.EBNF.Term.to,arg1);return this;}public Λ to(java.lang.String arg1){recordTerminal(roth.ori.fling.examples.EBNF.Term.to,arg1);return this;}public Λ and(roth.ori.fling.export.ASTNode arg1){recordTerminal(roth.ori.fling.examples.EBNF.Term.and,arg1);return this;}public Λ or(roth.ori.fling.export.ASTNode arg1){recordTerminal(roth.ori.fling.examples.EBNF.Term.or,arg1);return this;}public Λ and(java.lang.String arg1){recordTerminal(roth.ori.fling.examples.EBNF.Term.and,arg1);return this;}public Λ or(java.lang.String arg1){recordTerminal(roth.ori.fling.examples.EBNF.Term.or,arg1);return this;}public Λ oneOrMore(roth.ori.fling.export.ASTNode arg1){recordTerminal(roth.ori.fling.examples.EBNF.Term.oneOrMore,arg1);return this;}public Λ oneOrMore(java.lang.String arg1){recordTerminal(roth.ori.fling.examples.EBNF.Term.oneOrMore,arg1);return this;}public Λ noneOrMore(roth.ori.fling.export.ASTNode arg1){recordTerminal(roth.ori.fling.examples.EBNF.Term.noneOrMore,arg1);return this;}public Λ noneOrMore(java.lang.String arg1){recordTerminal(roth.ori.fling.examples.EBNF.Term.noneOrMore,arg1);return this;}public Λ option(roth.ori.fling.export.ASTNode arg1){recordTerminal(roth.ori.fling.examples.EBNF.Term.option,arg1);return this;}public Λ option(java.lang.String arg1){recordTerminal(roth.ori.fling.examples.EBNF.Term.option,arg1);return this;}public Λ either(roth.ori.fling.export.ASTNode arg1,roth.ori.fling.export.ASTNode arg2){recordTerminal(roth.ori.fling.examples.EBNF.Term.either,arg1,arg2);return this;}public Λ either(roth.ori.fling.export.ASTNode arg1,java.lang.String arg2){recordTerminal(roth.ori.fling.examples.EBNF.Term.either,arg1,arg2);return this;}public Λ either(java.lang.String arg1,roth.ori.fling.export.ASTNode arg2){recordTerminal(roth.ori.fling.examples.EBNF.Term.either,arg1,arg2);return this;}public Λ either(java.lang.String arg1,java.lang.String arg2){recordTerminal(roth.ori.fling.examples.EBNF.Term.either,arg1,arg2);return this;}public Λ attribute(java.lang.String arg1,java.lang.Object... arg2){recordTerminal(roth.ori.fling.examples.EBNF.Term.attribute,arg1,arg2);return this;}public roth.ori.fling.junk.EBNFAST.EBNF $(){return ast(roth.ori.fling.junk.EBNFAST.class.getSimpleName());}Λ(){super(new roth.ori.fling.examples.EBNF().bnf().ebnf(),"roth.ori.fling.junk");}}}